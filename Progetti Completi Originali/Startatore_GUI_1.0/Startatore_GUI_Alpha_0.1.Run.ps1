#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: ce8f19e5-bb0b-465b-a298-c734ecf7c17e
# Source File: C:\Users\Kitsu\Documents\Powershell\Progetti Completi Originali\Startatore_GUI_1.0\Startatore_GUI_Alpha_0.1.psf
#------------------------------------------------------------------------

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2020 v5.7.172
     Generated on:       20/10/2021 22:39
     Generated by:       Kitsu
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2020
#>


#----------------------------------------------
#region Application Functions
#----------------------------------------------

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Show-Startatore_GUI_Alpha_0_1_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Define SAPIEN Types
	#----------------------------------------------
	try{
		[ProgressBarOverlay] | Out-Null
	}
	catch
	{
		Add-Type -ReferencedAssemblies ('System.Windows.Forms', 'System.Drawing') -TypeDefinition  @" 
		using System;
		using System.Windows.Forms;
		using System.Drawing;
        namespace SAPIENTypes
        {
		    public class ProgressBarOverlay : System.Windows.Forms.ProgressBar
	        {
                public ProgressBarOverlay() : base() { SetStyle(ControlStyles.OptimizedDoubleBuffer | ControlStyles.AllPaintingInWmPaint, true); }
	            protected override void WndProc(ref Message m)
	            { 
	                base.WndProc(ref m);
	                if (m.Msg == 0x000F)// WM_PAINT
	                {
	                    if (Style != System.Windows.Forms.ProgressBarStyle.Marquee || !string.IsNullOrEmpty(this.Text))
                        {
                            using (Graphics g = this.CreateGraphics())
                            {
                                using (StringFormat stringFormat = new StringFormat(StringFormatFlags.NoWrap))
                                {
                                    stringFormat.Alignment = StringAlignment.Center;
                                    stringFormat.LineAlignment = StringAlignment.Center;
                                    if (!string.IsNullOrEmpty(this.Text))
                                        g.DrawString(this.Text, this.Font, Brushes.Black, this.ClientRectangle, stringFormat);
                                    else
                                    {
                                        int percent = (int)(((double)Value / (double)Maximum) * 100);
                                        g.DrawString(percent.ToString() + "%", this.Font, Brushes.Black, this.ClientRectangle, stringFormat);
                                    }
                                }
                            }
                        }
	                }
	            }
              
                public string TextOverlay
                {
                    get
                    {
                        return base.Text;
                    }
                    set
                    {
                        base.Text = value;
                        Invalidate();
                    }
                }
	        }
        }
"@ -IgnoreWarnings | Out-Null
	}
	#endregion Define SAPIEN Types

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$formLoStartatore = New-Object 'System.Windows.Forms.Form'
	$buttonNext = New-Object 'System.Windows.Forms.Button'
	$buttonPrev = New-Object 'System.Windows.Forms.Button'
	$buttonExit = New-Object 'System.Windows.Forms.Button'
	$tabcontrol1 = New-Object 'System.Windows.Forms.TabControl'
	$tabpage1 = New-Object 'System.Windows.Forms.TabPage'
	$buttonPremiQuiPerDHCPRapid = New-Object 'System.Windows.Forms.Button'
	$GatewayPersonalizzato = New-Object 'System.Windows.Forms.TextBox'
	$IPpersonalizzato = New-Object 'System.Windows.Forms.TextBox'
	$textbox4 = New-Object 'System.Windows.Forms.TextBox'
	$textbox3 = New-Object 'System.Windows.Forms.TextBox'
	$textbox2 = New-Object 'System.Windows.Forms.TextBox'
	$textbox1 = New-Object 'System.Windows.Forms.TextBox'
	$labelGatewayAssociatoAdIp = New-Object 'System.Windows.Forms.Label'
	$buttonAvvio = New-Object 'System.Windows.Forms.Button'
	$labelIpPersonalizzato = New-Object 'System.Windows.Forms.Label'
	$button1721620157 = New-Object 'System.Windows.Forms.Button'
	$button1721620156 = New-Object 'System.Windows.Forms.Button'
	$button1721620155 = New-Object 'System.Windows.Forms.Button'
	$button1721620154 = New-Object 'System.Windows.Forms.Button'
	$button1721620153 = New-Object 'System.Windows.Forms.Button'
	$button1721620152 = New-Object 'System.Windows.Forms.Button'
	$labelLoStartatore = New-Object 'System.Windows.Forms.Label'
	$LogoGPI = New-Object 'System.Windows.Forms.PictureBox'
	$tabpage2 = New-Object 'System.Windows.Forms.TabPage'
	$button1721620151 = New-Object 'System.Windows.Forms.Button'
	$tabpage3 = New-Object 'System.Windows.Forms.TabPage'
	$buttonPulisci = New-Object 'System.Windows.Forms.Button'
	$progressbaroverlay1 = New-Object 'SAPIENTypes.ProgressBarOverlay'
	$ResultBox = New-Object 'System.Windows.Forms.RichTextBox'
	$tooltip1 = New-Object 'System.Windows.Forms.ToolTip'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	$formLoStartatore_Load = {
		
		UpdateNavButtons
		
		try
		{
			Test-Connection -ComputerName www.google.com -Quiet -ErrorAction Stop
			
			IPattuale
		}
		catch
		{
			$IPattuale1 = "0.0.0.0"
			$SubnetAttuale = "0.0.0.0"
			$GatewayAddressAttuale = "0.0.0.0"
			
			$textbox1.Text = $IPattuale1
			$textbox2.Text = $SubnetAttuale
			$textbox3.Text = "Gateway ----------  $GatewayAddressAttuale"
		}
		
		
		
	}
	
	function Get-Gateway
	{
		(Get-NetRoute "0.0.0.0/0").NextHop
	
	}
	function set-DHCP
	{
		
		$IPType = "IPv4"
		$adapter = Get-NetAdapter | ? { $_.Status -eq "up" }
		$interface = $adapter | Get-NetIPInterface -AddressFamily $IPType
		If ($interface.Dhcp -eq "Disabled")
		{
			# Remove existing gateway
			If (($interface | Get-NetIPConfiguration).Ipv4DefaultGateway)
			{
				$interface | Remove-NetRoute -Confirm:$false
			}
			# Enable DHCP
			$interface | Set-NetIPInterface -DHCP Enabled
			# Configure the DNS Servers
			$interface | Set-DnsClientServerAddress -ResetServerAddresses
		}
		
	}
	function IPattuale
	{
		$IPattuale1 = Get-Subnet | select IPaddress | Out-String
		$SubnetAttuale = Get-Subnet | select subnetmask | Out-String
		$GatewayAddressAttuale = Get-Gateway
		
		$textbox1.Text = $IPattuale1
		$textbox2.Text = $SubnetAttuale
		$textbox3.Text = "Gateway ----------  $GatewayAddressAttuale"
	
	}
	function UpdateNavButtons
	{
		$buttonNext.Enabled = $tabcontrol1.SelectedIndex -lt $tabcontrol1.TabCount - 1	
		$buttonPrev.Enabled = $tabcontrol1.SelectedIndex -gt 0
	}
	function CambioIP
	{
		# Ho dovuto fare così, funziona bene e tutto, se trovo modi migliori poi lo cambierò, prob write-progress collegato alla barra funziona meglio.
		
		$IPPasso1 = "Cambio IP in Corso"
		$IPPasso2 = "`nRimozione TCP IP 6"
		$IPPasso3 = "`nRaccolgo i dati sulla scheda di rete"
		$IPPasso4 = "`nRimozione IP e GATEWAY impostati"
		$IPPasso5 = "`nImposto i nuovi parametri"
		
		$progressbaroverlay1.Value(0)
		
		$progressbaroverlay1.Increment(10)
		
		$ResultBox.AppendText($IPPasso1)
		
		Start-Sleep -Seconds 1
		
		$ResultBox.AppendText($IPpasso2)
		
		Disable-NetAdapterBinding -InterfaceAlias "Ethernet" -ComponentID ms_tcpip6 -ErrorAction SilentlyContinue
		
		Start-Sleep -Seconds 1
		
		$ResultBox.AppendText($IPpasso3)
		
		# Retrieve the network adapter that you want to configure
		$adapter = Get-NetAdapter | Where-Object { $_.Status -eq "up" }
		
		$progressbaroverlay1.Increment(30)
		
		# Remove any existing IP, gateway from our ipv4 adapter
		
		If (($adapter | Get-NetIPConfiguration).IPv4Address.IPAddress)
		{
			$adapter | Remove-NetIPAddress -AddressFamily $IPType -Confirm:$false
		}
		
		Start-Sleep -Seconds 1
		
		$ResultBox.AppendText($IPpasso4)
		
		$progressbaroverlay1.Increment(20)
		
		If (($adapter | Get-NetIPConfiguration).Ipv4DefaultGateway)
		{
			$adapter | Remove-NetRoute -AddressFamily $IPType -Confirm:$false
		}
		
		$progressbaroverlay1.Increment(25)
		
		$ResultBox.AppendText($IPPasso5)
		
		# Configure the IP address and default gateway
		$adapter | New-NetIPAddress `
									-AddressFamily $IPType `
									-IPAddress $IP `
									-PrefixLength $MaskBits `
									-DefaultGateway $Gateway
		
		# Configure the DNS client server IP addresses
		$adapter | Set-DnsClientServerAddress -ServerAddresses ($Dns)
		
		$progressbaroverlay1.Increment(5)
		Start-Sleep -Seconds 1
		$progressbaroverlay1.Increment(5)
		Start-Sleep -Seconds 1
		$progressbaroverlay1.Increment(5)
		Start-Sleep -Seconds 1
		$progressbaroverlay1.Increment(5)
		Start-Sleep -Seconds 1
		$progressbaroverlay1.Increment(5)
		
		$ipconfig1 = "`nConferma che l'IP visualizzato è quello desiderato`n"
		
		$IPconferma1 = $env:HostIP = (
			Get-NetIPConfiguration |
			Where-Object {
				$_.IPv4DefaultGateway -ne $null -and
				$_.NetAdapter.Status -ne "Disconnected"
			}
		).IPv4Address.IPAddress
		
		$ResultBox.AppendText($IPconfig1)
		$ResultBox.AppendText($IPConferma1)
		
		UpdateNavButtons
	}
	function Convert-Int64toIP ([int64]$int)
	{
		(([math]::truncate($int / 16777216)).tostring() + "." + ([math]::truncate(($int % 16777216) / 65536)).tostring() + "." + ([math]::truncate(($int % 65536) / 256)).tostring() + "." + ([math]::truncate($int % 256)).tostring())
	}
	function Get-NetworkClass
	{
	    <#
	        .SYNOPSIS
	            Use to determine the network class of a given IP address.
	
	        .DESCRIPTION
	            Returns A, B, C, D or E depending on the numeric value of the first octet of a given IP address.
	
	        .PARAMETER IP
	            The IP address to test.
	
	        .EXAMPLE
	            Get-NetworkClass -IP 172.16.1.2
	
	        .EXAMPLE
	            '10.1.1.1' | Get-NetworkClass
	    #>
		param (
			[parameter(Mandatory, ValueFromPipeline)]
			[string]$IP
		)
		process
		{
			
			switch ($IP.Split('.')[0])
			{
				{ $_ -in 0 .. 127 } { 'A' }
				{ $_ -in 128 .. 191 } { 'B' }
				{ $_ -in 192 .. 223 } { 'C' }
				{ $_ -in 224 .. 239 } { 'D' }
				{ $_ -in 240 .. 255 } { 'E' }
			}
		}
	}
	function Get-Subnet
	{
	    <#
	        .SYNOPSIS
	            Returns subnet details for the local IP address, or a given network address and mask.
	
	        .DESCRIPTION
	            Use to get subnet details for a given network address and mask, including network address, broadcast address, network class, address range, host addresses and host address count.
	
	        .PARAMETER IP
	            The network IP address or IP address with subnet mask via slash notation.
	
	        .PARAMETER MaskBits
	            The numerical representation of the subnet mask.
	
	        .PARAMETER Force
	            Use to force the return of all host IP addresses regardless of the subnet size (skipped by default for subnets larger than /16).
	
	        .EXAMPLE
	            Get-Subnet 10.1.2.3/24
	
	            Description
	            -----------
	            Returns the subnet details for the specified network and mask, specified as a single string to the -IP parameter.
	
	        .EXAMPLE
	            Get-Subnet 192.168.0.1 -MaskBits 23
	
	            Description
	            -----------
	            Returns the subnet details for the specified network and mask.
	
	        .EXAMPLE
	            Get-Subnet
	
	            Description
	            -----------
	            Returns the subnet details for the current local IP.
	
	        .EXAMPLE
	            '10.1.2.3/24','10.1.2.4/24' | Get-Subnet
	
	            Description
	            -----------
	            Returns the subnet details for two specified networks.
	    #>
		param (
			[parameter(ValueFromPipeline)]
			[string]$IP,
			[ValidateRange(0, 32)]
			[Alias('CIDR')]
			[int]$MaskBits,
			[switch]$Force
		)
		process
		{
			
			if ($PSBoundParameters.ContainsKey('MaskBits'))
			{
				$Mask = $MaskBits
			}
			
			if (-not $IP)
			{
				$LocalIP = (Get-NetIPAddress | Where-Object { $_.AddressFamily -eq 'IPv4' -and $_.PrefixOrigin -ne 'WellKnown' })
				
				$IP = $LocalIP.IPAddress
				If ($Mask -notin 0 .. 32) { $Mask = $LocalIP.PrefixLength }
			}
			
			if ($IP -match '/\d')
			{
				$IPandMask = $IP -Split '/'
				$IP = $IPandMask[0]
				$Mask = $IPandMask[1]
			}
			
			$Class = Get-NetworkClass -IP $IP
			
			if ($Mask -notin 0 .. 32)
			{
				
				$Mask = switch ($Class)
				{
					'A' { 8 }
					'B' { 16 }
					'C' { 24 }
					default {
						throw "Subnet mask size was not specified and could not be inferred because the address is Class $Class."
					}
				}
				
				Write-Warning "Subnet mask size was not specified. Using default subnet size for a Class $Class network of /$Mask."
			}
			
			$IPAddr = [ipaddress]::Parse($IP)
			$MaskAddr = [ipaddress]::Parse((Convert-Int64toIP -int ([convert]::ToInt64(("1" * $Mask + "0" * (32 - $Mask)), 2))))
			$NetworkAddr = [ipaddress]($MaskAddr.address -band $IPAddr.address)
			$BroadcastAddr = [ipaddress](([ipaddress]::parse("255.255.255.255").address -bxor $MaskAddr.address -bor $NetworkAddr.address))
			
			$HostStartAddr = (Convert-IPtoInt64 -ip $NetworkAddr.ipaddresstostring) + 1
			$HostEndAddr = (Convert-IPtoInt64 -ip $broadcastaddr.ipaddresstostring) - 1
			
			$HostAddressCount = ($HostEndAddr - $HostStartAddr) + 1
			
			if ($Mask -ge 16 -or $Force)
			{
				
				Write-Host	"Recuperati i dati per la macchina $NetworkAddr/$Mask.."
				
				$HostAddresses = for ($i = $HostStartAddr; $i -le $HostEndAddr; $i++)
				{
					Convert-Int64toIP -int $i
				}
			}
			else
			{
				Write-Warning "Host address enumeration was not performed because it would take some time for a /$Mask subnet. `nUse -Force if you want it to occur."
			}
			
			[pscustomobject]@{
				IPAddress	     = $IPAddr
				MaskBits		 = $Mask
				NetworkAddress   = $NetworkAddr
				BroadcastAddress = $broadcastaddr
				SubnetMask	     = $MaskAddr
				NetworkClass	 = $Class
				Range		     = "$networkaddr ~ $broadcastaddr"
				HostAddresses    = $HostAddresses
				HostAddressCount = $HostAddressCount
			}
		}
	}
	function Convert-IPtoInt64 ($ip)
	{
		$octets = $ip.split(".")
		[int64]([int64]$octets[0] * 16777216 + [int64]$octets[1] * 65536 + [int64]$octets[2] * 256 + [int64]$octets[3])
	}
	
	$buttonPrev_Click={
		if($tabcontrol1.SelectedIndex -gt 0)
		{
			$tabcontrol1.SelectedIndex--
		}
		UpdateNavButtons
	}
	$buttonNext_Click={	
		if($tabcontrol1.SelectedIndex -lt $tabcontrol1.TabCount - 1)
		{
			$tabcontrol1.SelectedIndex++
		}
		UpdateNavButtons
	}
	$LogoGPI_Click={
		#TODO: Place custom script here
		
	}
	$labelLoStartatore_Click={
		#TODO: Place custom script here
		
	}
	$button1721620152_Click = {
		
		$tabcontrol1.SelectedIndex = 2
		
		$IP = "172.16.20.152"
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = "172.16.16.254"
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
	}
	$button1721620153_Click={
		
		$tabcontrol1.SelectedIndex = 2
		
		$IP = "172.16.20.153"
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = "172.16.16.254"
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
		
		
	}
	$button1721620154_Click={
		
		$tabcontrol1.SelectedIndex = 2
		
		$IP = "172.16.20.154"
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = "172.16.16.254"
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
		
	}
	$button1721620155_Click={
	
		$tabcontrol1.SelectedIndex = 2
		
		$IP = "172.16.20.155"
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = "172.16.16.254"
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
	}
	$button1721620156_Click = {
		
		$tabcontrol1.SelectedIndex = 2
		
		$IP = "172.16.20.156"
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = "172.16.16.254"
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
	}
	
	$button1721620157_Click = {
		
		$tabcontrol1.SelectedIndex = 2
		
		$IP = "172.16.20.157"
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = "172.16.16.254"
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
		
	}
	
	$buttonPulisci_Click = {
		#TODO: Place custom script here
		$ResultBox.Text = clear
		$progressbaroverlay1.Increment(-100)
	}
	$BottonePerTest_Click={
		#TODO: Place custom script here
		
		$TestIP = Get-Subnet | Out-String
		
		$ResultBox.AppendText($TestIP)
	}
	$BottonePerTest_Click={
		#TODO: Place custom script here
		
		$IP = $IPpersonalizzato.text
		
		$resultbox.AppendText($IP)
	}
	
	$textbox1_TextChanged={
		#TODO: Place custom script here
		
	}
	$textbox2_TextChanged={
		#TODO: Place custom script here
		
	}
	
	$buttonAvvio_Click={
		#TODO: Place custom script here
		
		$tabcontrol1.SelectedIndex = 2
		
		$IP = $IPpersonalizzato.text
		$MaskBits = 20 # This means subnet mask = 255.255.255.0
		$Gateway = $GatewayPersonalizzato.text
		$Dns = "172.16.16.1", "172.16.16.2"
		$IPType = "IPv4"
		
		CambioIP
		
		$IPpersonalizzato.text = clear
		
	}
	
	$IPpersonalizzato_TextChanged = {
		$IP = $IPpersonalizzato.text
	}
	$GatewayPersonalizzato_TextChanged = {
		$Gateway = $GatewayPersonalizzato.text
	}
	
	$tabpage1_Click={
		#TODO: Place custom script here
		
	}
	$labelGatewayAssociatoAdIp_Click={
		#TODO: Place custom script here
		
	}
	
	$buttonPremiQuiPerDHCPRapid_Click={
		
		$tabcontrol1.SelectedIndex = 2
		
		set-DHCP
		
		$ResultBox.Text = "Settaggio DHCP in corso"
		
		$RisultatoDHCP = Get-Subnet | Out-String
		
		$ResultBox.AppendText($RisultatoDHCP)
	}
	
	$button1721620151_Click={
		#TODO: Place custom script here
		Rename-Computer 
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$formLoStartatore.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonNext.remove_Click($buttonNext_Click)
			$buttonPrev.remove_Click($buttonPrev_Click)
			$buttonPremiQuiPerDHCPRapid.remove_Click($buttonPremiQuiPerDHCPRapid_Click)
			$GatewayPersonalizzato.remove_TextChanged($GatewayPersonalizzato_TextChanged)
			$IPpersonalizzato.remove_TextChanged($IPpersonalizzato_TextChanged)
			$textbox2.remove_TextChanged($textbox2_TextChanged)
			$textbox1.remove_TextChanged($textbox1_TextChanged)
			$labelGatewayAssociatoAdIp.remove_Click($labelGatewayAssociatoAdIp_Click)
			$buttonAvvio.remove_Click($buttonAvvio_Click)
			$button1721620157.remove_Click($button1721620157_Click)
			$button1721620156.remove_Click($button1721620156_Click)
			$button1721620155.remove_Click($button1721620155_Click)
			$button1721620154.remove_Click($button1721620154_Click)
			$button1721620153.remove_Click($button1721620153_Click)
			$button1721620152.remove_Click($button1721620152_Click)
			$labelLoStartatore.remove_Click($labelLoStartatore_Click)
			$tabpage1.remove_Click($tabpage1_Click)
			$button1721620151.remove_Click($button1721620151_Click)
			$buttonPulisci.remove_Click($buttonPulisci_Click)
			$formLoStartatore.remove_Load($formLoStartatore_Load)
			$formLoStartatore.remove_Load($Form_StateCorrection_Load)
			$formLoStartatore.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch { Out-Null <# Prevent PSScriptAnalyzer warning #> }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$formLoStartatore.SuspendLayout()
	$tabcontrol1.SuspendLayout()
	$tabpage1.SuspendLayout()
	$tabpage2.SuspendLayout()
	$tabpage3.SuspendLayout()
	#
	# formLoStartatore
	#
	$formLoStartatore.Controls.Add($buttonNext)
	$formLoStartatore.Controls.Add($buttonPrev)
	$formLoStartatore.Controls.Add($buttonExit)
	$formLoStartatore.Controls.Add($tabcontrol1)
	$formLoStartatore.AutoScaleDimensions = '6, 13'
	$formLoStartatore.AutoScaleMode = 'Font'
	$formLoStartatore.BackColor = 'Orange'
	$formLoStartatore.BackgroundImageLayout = 'None'
	$formLoStartatore.ClientSize = '482, 367'
	$formLoStartatore.Name = 'formLoStartatore'
	$formLoStartatore.Text = 'Lo Startatore!'
	$formLoStartatore.add_Load($formLoStartatore_Load)
	#
	# buttonNext
	#
	$buttonNext.Anchor = 'Bottom, Left'
	$buttonNext.Font = 'Webdings, 8.25pt'
	$buttonNext.Location = '58, 332'
	$buttonNext.Name = 'buttonNext'
	$buttonNext.Size = '35, 23'
	$buttonNext.TabIndex = 3
	$buttonNext.Text = '8'
	$buttonNext.TextAlign = 'TopCenter'
	$tooltip1.SetToolTip($buttonNext, 'Next Tab')
	$buttonNext.UseCompatibleTextRendering = $True
	$buttonNext.UseVisualStyleBackColor = $True
	$buttonNext.add_Click($buttonNext_Click)
	#
	# buttonPrev
	#
	$buttonPrev.Anchor = 'Bottom, Left'
	$buttonPrev.Font = 'Webdings, 8.25pt'
	$buttonPrev.Location = '17, 332'
	$buttonPrev.Name = 'buttonPrev'
	$buttonPrev.Size = '35, 23'
	$buttonPrev.TabIndex = 2
	$buttonPrev.Text = '7'
	$buttonPrev.TextAlign = 'TopCenter'
	$tooltip1.SetToolTip($buttonPrev, 'Previous Tab')
	$buttonPrev.UseCompatibleTextRendering = $True
	$buttonPrev.UseVisualStyleBackColor = $True
	$buttonPrev.add_Click($buttonPrev_Click)
	#
	# buttonExit
	#
	$buttonExit.Anchor = 'Bottom, Right'
	$buttonExit.DialogResult = 'OK'
	$buttonExit.Location = '390, 332'
	$buttonExit.Name = 'buttonExit'
	$buttonExit.Size = '75, 23'
	$buttonExit.TabIndex = 1
	$buttonExit.Text = 'Exit'
	$buttonExit.UseCompatibleTextRendering = $True
	$buttonExit.UseVisualStyleBackColor = $True
	#
	# tabcontrol1
	#
	$tabcontrol1.Controls.Add($tabpage1)
	$tabcontrol1.Controls.Add($tabpage2)
	$tabcontrol1.Controls.Add($tabpage3)
	$tabcontrol1.Anchor = 'Top, Bottom, Left, Right'
	$tabcontrol1.Cursor = 'Arrow'
	$tabcontrol1.Location = '13, 12'
	$tabcontrol1.Name = 'tabcontrol1'
	$tabcontrol1.SelectedIndex = 0
	$tabcontrol1.Size = '457, 314'
	$tabcontrol1.TabIndex = 0
	#
	# tabpage1
	#
	$tabpage1.Controls.Add($buttonPremiQuiPerDHCPRapid)
	$tabpage1.Controls.Add($GatewayPersonalizzato)
	$tabpage1.Controls.Add($IPpersonalizzato)
	$tabpage1.Controls.Add($textbox4)
	$tabpage1.Controls.Add($textbox3)
	$tabpage1.Controls.Add($textbox2)
	$tabpage1.Controls.Add($textbox1)
	$tabpage1.Controls.Add($labelGatewayAssociatoAdIp)
	$tabpage1.Controls.Add($buttonAvvio)
	$tabpage1.Controls.Add($labelIpPersonalizzato)
	$tabpage1.Controls.Add($button1721620157)
	$tabpage1.Controls.Add($button1721620156)
	$tabpage1.Controls.Add($button1721620155)
	$tabpage1.Controls.Add($button1721620154)
	$tabpage1.Controls.Add($button1721620153)
	$tabpage1.Controls.Add($button1721620152)
	$tabpage1.Controls.Add($labelLoStartatore)
	$tabpage1.Controls.Add($LogoGPI)
	$tabpage1.Location = '4, 22'
	$tabpage1.Name = 'tabpage1'
	$tabpage1.Padding = '3, 3, 3, 3'
	$tabpage1.Size = '449, 288'
	$tabpage1.TabIndex = 0
	$tabpage1.Text = 'Cambio IP'
	$tabpage1.UseVisualStyleBackColor = $True
	$tabpage1.add_Click($tabpage1_Click)
	#
	# buttonPremiQuiPerDHCPRapid
	#
	$buttonPremiQuiPerDHCPRapid.Location = '188, 175'
	$buttonPremiQuiPerDHCPRapid.Name = 'buttonPremiQuiPerDHCPRapid'
	$buttonPremiQuiPerDHCPRapid.Size = '255, 23'
	$buttonPremiQuiPerDHCPRapid.TabIndex = 27
	$buttonPremiQuiPerDHCPRapid.Text = 'Premi qui per DHCP rapido'
	$buttonPremiQuiPerDHCPRapid.UseCompatibleTextRendering = $True
	$buttonPremiQuiPerDHCPRapid.UseVisualStyleBackColor = $True
	$buttonPremiQuiPerDHCPRapid.add_Click($buttonPremiQuiPerDHCPRapid_Click)
	#
	# GatewayPersonalizzato
	#
	$GatewayPersonalizzato.Location = '293, 230'
	$GatewayPersonalizzato.Name = 'GatewayPersonalizzato'
	$GatewayPersonalizzato.Size = '100, 20'
	$GatewayPersonalizzato.TabIndex = 26
	$GatewayPersonalizzato.add_TextChanged($GatewayPersonalizzato_TextChanged)
	#
	# IPpersonalizzato
	#
	$IPpersonalizzato.Location = '187, 230'
	$IPpersonalizzato.Name = 'IPpersonalizzato'
	$IPpersonalizzato.Size = '100, 20'
	$IPpersonalizzato.TabIndex = 25
	$IPpersonalizzato.add_TextChanged($IPpersonalizzato_TextChanged)
	#
	# textbox4
	#
	$textbox4.Location = '186, 54'
	$textbox4.Name = 'textbox4'
	$textbox4.ReadOnly = $True
	$textbox4.Size = '165, 20'
	$textbox4.TabIndex = 20
	$textbox4.Text = 'Configurazione attuale dispositivo'
	#
	# textbox3
	#
	$textbox3.AccessibleRole = 'IpAddress'
	$textbox3.Location = '187, 132'
	$textbox3.Name = 'textbox3'
	$textbox3.ReadOnly = $True
	$textbox3.Size = '256, 20'
	$textbox3.TabIndex = 19
	#
	# textbox2
	#
	$textbox2.AccessibleRole = 'IpAddress'
	$textbox2.Location = '187, 106'
	$textbox2.Name = 'textbox2'
	$textbox2.ReadOnly = $True
	$textbox2.Size = '256, 20'
	$textbox2.TabIndex = 18
	$textbox2.add_TextChanged($textbox2_TextChanged)
	#
	# textbox1
	#
	$textbox1.AccessibleRole = 'IpAddress'
	$textbox1.Location = '186, 80'
	$textbox1.Name = 'textbox1'
	$textbox1.ReadOnly = $True
	$textbox1.Size = '256, 20'
	$textbox1.TabIndex = 14
	$textbox1.add_TextChanged($textbox1_TextChanged)
	#
	# labelGatewayAssociatoAdIp
	#
	$labelGatewayAssociatoAdIp.AutoSize = $True
	$labelGatewayAssociatoAdIp.Location = '293, 210'
	$labelGatewayAssociatoAdIp.Name = 'labelGatewayAssociatoAdIp'
	$labelGatewayAssociatoAdIp.Size = '135, 17'
	$labelGatewayAssociatoAdIp.TabIndex = 24
	$labelGatewayAssociatoAdIp.Text = 'Gateway Associato ad ip
'
	$labelGatewayAssociatoAdIp.UseCompatibleTextRendering = $True
	$labelGatewayAssociatoAdIp.add_Click($labelGatewayAssociatoAdIp_Click)
	#
	# buttonAvvio
	#
	$buttonAvvio.Location = '256, 256'
	$buttonAvvio.Name = 'buttonAvvio'
	$buttonAvvio.Size = '75, 23'
	$buttonAvvio.TabIndex = 22
	$buttonAvvio.Text = 'Avvio!'
	$buttonAvvio.UseCompatibleTextRendering = $True
	$buttonAvvio.UseVisualStyleBackColor = $True
	$buttonAvvio.add_Click($buttonAvvio_Click)
	#
	# labelIpPersonalizzato
	#
	$labelIpPersonalizzato.AutoSize = $True
	$labelIpPersonalizzato.Location = '187, 210'
	$labelIpPersonalizzato.Name = 'labelIpPersonalizzato'
	$labelIpPersonalizzato.Size = '91, 17'
	$labelIpPersonalizzato.TabIndex = 12
	$labelIpPersonalizzato.Text = 'Ip Personalizzato'
	$labelIpPersonalizzato.UseCompatibleTextRendering = $True
	#
	# button1721620157
	#
	$button1721620157.Location = '7, 262'
	$button1721620157.Name = 'button1721620157'
	$button1721620157.Size = '173, 23'
	$button1721620157.TabIndex = 11
	$button1721620157.Text = '172.16.20.157'
	$button1721620157.UseCompatibleTextRendering = $True
	$button1721620157.UseVisualStyleBackColor = $True
	$button1721620157.add_Click($button1721620157_Click)
	#
	# button1721620156
	#
	$button1721620156.Location = '7, 233'
	$button1721620156.Name = 'button1721620156'
	$button1721620156.Size = '173, 23'
	$button1721620156.TabIndex = 10
	$button1721620156.Text = '172.16.20.156'
	$button1721620156.UseCompatibleTextRendering = $True
	$button1721620156.UseVisualStyleBackColor = $True
	$button1721620156.add_Click($button1721620156_Click)
	#
	# button1721620155
	#
	$button1721620155.Location = '7, 204'
	$button1721620155.Name = 'button1721620155'
	$button1721620155.Size = '173, 23'
	$button1721620155.TabIndex = 9
	$button1721620155.Text = '172.16.20.155'
	$button1721620155.UseCompatibleTextRendering = $True
	$button1721620155.UseVisualStyleBackColor = $True
	$button1721620155.add_Click($button1721620155_Click)
	#
	# button1721620154
	#
	$button1721620154.Location = '7, 175'
	$button1721620154.Name = 'button1721620154'
	$button1721620154.Size = '173, 23'
	$button1721620154.TabIndex = 8
	$button1721620154.Text = '172.16.20.154'
	$button1721620154.UseCompatibleTextRendering = $True
	$button1721620154.UseVisualStyleBackColor = $True
	$button1721620154.add_Click($button1721620154_Click)
	#
	# button1721620153
	#
	$button1721620153.Location = '7, 146'
	$button1721620153.Name = 'button1721620153'
	$button1721620153.Size = '173, 23'
	$button1721620153.TabIndex = 7
	$button1721620153.Text = '172.16.20.153'
	$button1721620153.UseCompatibleTextRendering = $True
	$button1721620153.UseVisualStyleBackColor = $True
	$button1721620153.add_Click($button1721620153_Click)
	#
	# button1721620152
	#
	$button1721620152.Location = '7, 117'
	$button1721620152.Name = 'button1721620152'
	$button1721620152.Size = '173, 23'
	$button1721620152.TabIndex = 6
	$button1721620152.Text = '172.16.20.152'
	$button1721620152.UseCompatibleTextRendering = $True
	$button1721620152.UseVisualStyleBackColor = $True
	$button1721620152.add_Click($button1721620152_Click)
	#
	# labelLoStartatore
	#
	$labelLoStartatore.AutoSize = $True
	$labelLoStartatore.Font = 'Microsoft Sans Serif, 30pt'
	$labelLoStartatore.Location = '186, 6'
	$labelLoStartatore.Name = 'labelLoStartatore'
	$labelLoStartatore.Size = '256, 54'
	$labelLoStartatore.TabIndex = 4
	$labelLoStartatore.Text = 'Lo startatore!'
	$labelLoStartatore.UseCompatibleTextRendering = $True
	$labelLoStartatore.add_Click($labelLoStartatore_Click)
	#
	# LogoGPI
	#
	#region Binary Data
	$LogoGPI.Image = [System.Convert]::FromBase64String('
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
4rQeIWq5SCJBEgiQRIIkESCJBEgiQRf/2Q==')
	#endregion
	$LogoGPI.Location = '6, 6'
	$LogoGPI.Name = 'LogoGPI'
	$LogoGPI.Size = '174, 104'
	$LogoGPI.SizeMode = 'Zoom'
	$LogoGPI.TabIndex = 1
	$LogoGPI.TabStop = $False
	#
	# tabpage2
	#
	$tabpage2.Controls.Add($button1721620151)
	$tabpage2.Location = '4, 22'
	$tabpage2.Name = 'tabpage2'
	$tabpage2.Padding = '3, 3, 3, 3'
	$tabpage2.Size = '449, 288'
	$tabpage2.TabIndex = 1
	$tabpage2.Text = 'Cambio Nome'
	$tabpage2.UseVisualStyleBackColor = $True
	#
	# button1721620151
	#
	$button1721620151.Location = '6, 16'
	$button1721620151.Name = 'button1721620151'
	$button1721620151.Size = '75, 23'
	$button1721620151.TabIndex = 0
	$button1721620151.Text = 'button1721620151'
	$button1721620151.UseCompatibleTextRendering = $True
	$button1721620151.UseVisualStyleBackColor = $True
	$button1721620151.add_Click($button1721620151_Click)
	#
	# tabpage3
	#
	$tabpage3.Controls.Add($buttonPulisci)
	$tabpage3.Controls.Add($progressbaroverlay1)
	$tabpage3.Controls.Add($ResultBox)
	$tabpage3.Location = '4, 22'
	$tabpage3.Name = 'tabpage3'
	$tabpage3.Padding = '3, 3, 3, 3'
	$tabpage3.Size = '449, 288'
	$tabpage3.TabIndex = 2
	$tabpage3.Text = 'Monitor'
	$tabpage3.UseVisualStyleBackColor = $True
	#
	# buttonPulisci
	#
	$buttonPulisci.Location = '7, 241'
	$buttonPulisci.Name = 'buttonPulisci'
	$buttonPulisci.Size = '109, 36'
	$buttonPulisci.TabIndex = 2
	$buttonPulisci.Text = 'Pulisci'
	$buttonPulisci.UseCompatibleTextRendering = $True
	$buttonPulisci.UseVisualStyleBackColor = $True
	$buttonPulisci.add_Click($buttonPulisci_Click)
	#
	# progressbaroverlay1
	#
	$progressbaroverlay1.Location = '7, 199'
	$progressbaroverlay1.Name = 'progressbaroverlay1'
	$progressbaroverlay1.Size = '436, 36'
	$progressbaroverlay1.TabIndex = 1
	#
	# ResultBox
	#
	$ResultBox.Location = '7, 7'
	$ResultBox.Name = 'ResultBox'
	$ResultBox.ReadOnly = $True
	$ResultBox.Size = '436, 186'
	$ResultBox.TabIndex = 0
	$ResultBox.Text = ''
	#
	# tooltip1
	#
	$tabpage3.ResumeLayout()
	$tabpage2.ResumeLayout()
	$tabpage1.ResumeLayout()
	$tabcontrol1.ResumeLayout()
	$formLoStartatore.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $formLoStartatore.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$formLoStartatore.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$formLoStartatore.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $formLoStartatore.ShowDialog()

} #End Function

#Call the form
Show-Startatore_GUI_Alpha_0_1_psf | Out-Null
